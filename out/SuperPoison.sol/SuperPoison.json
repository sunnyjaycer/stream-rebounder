{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialAddress",
          "type": "address"
        }
      ],
      "name": "initializeProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "setPoisonFlowId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061085c806100206000396000f3fe6080604052600436106100435760003560e01c80634a0687ef1461005a5780634cd88b761461007a578063a1b2bf8b1461009a578063f4dd6e14146100ba57610052565b3661005257610050610113565b005b610050610113565b34801561006657600080fd5b50610050610075366004610539565b610125565b34801561008657600080fd5b506100506100953660046105a4565b61022b565b3480156100a657600080fd5b506100506100b5366004610610565b6102ff565b3480156100c657600080fd5b506100506100d536600461068f565b604080516001600160a01b03808516602083015283169181019190915260600160408051601f19818403018152919052805160209182012090555050565b61012361011e610419565b610448565b565b6001600160a01b0381166101805760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006101aa7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146102005760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a656400006044820152606401610177565b610228817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b6040516285fc1360e71b815230906342fe0980906102599060009060129089908990899089906004016106eb565b600060405180830381600087803b15801561027357600080fd5b505af1158015610287573d6000803e3d6000fd5b50506040805160008152602081019182905263c68d428360e01b90915230925063c68d428391506102c7903390670de0b6b3a76400009060248101610739565b600060405180830381600087803b1580156102e157600080fd5b505af11580156102f5573d6000803e3d6000fd5b5050505050505050565b61033c8383838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061047192505050565b60408051606060208201819052600d60808301526c41677265656d656e744461746160981b60a083015233928201839052810185905260009060c0016040516020818303038152906040528051906020012090506103cd818585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506104dc92505050565b336001600160a01b03167f0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca86868660405161040a939291906107a5565b60405180910390a25050505050565b60006104437f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e808015610467573d6000f35b3d6000fd5b505050565b6020548214801561049e57506000801b81600081518110610494576104946107e9565b6020026020010151145b156104d85760405162461bcd60e51b815260206004820152600a60248201526919dbc81d1bc81a985a5b60b21b6044820152606401610177565b5050565b60005b815181101561046c5760008282815181106104fc576104fc6107e9565b6020026020010151905080828501555080610516906107ff565b90506104df565b80356001600160a01b038116811461053457600080fd5b919050565b60006020828403121561054b57600080fd5b6105548261051d565b9392505050565b60008083601f84011261056d57600080fd5b50813567ffffffffffffffff81111561058557600080fd5b60208301915083602082850101111561059d57600080fd5b9250929050565b600080600080604085870312156105ba57600080fd5b843567ffffffffffffffff808211156105d257600080fd5b6105de8883890161055b565b909650945060208701359150808211156105f757600080fd5b506106048782880161055b565b95989497509550505050565b60008060006040848603121561062557600080fd5b83359250602084013567ffffffffffffffff8082111561064457600080fd5b818601915086601f83011261065857600080fd5b81358181111561066757600080fd5b8760208260051b850101111561067c57600080fd5b6020830194508093505050509250925092565b600080604083850312156106a257600080fd5b6106ab8361051d565b91506106b96020840161051d565b90509250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff8616602082015260806040820181905260009061071990830186886106c2565b828103606084015261072c8185876106c2565b9998505050505050505050565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b8181101561077b5785810183015185820160800152820161075f565b8181111561078d576000608083870101525b50601f01601f19169290920160800195945050505050565b838152604060208201819052810182905260006001600160fb1b038311156107cc57600080fd5b8260051b8085606085013760009201606001918252509392505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161081f57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220a2363cdd07286730489ec7dd18bf1108a821cbbf6c6c62d8f4c065ad67cd92cf64736f6c634300080e0033",
    "sourceMap": "864:2422:3:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100435760003560e01c80634a0687ef1461005a5780634cd88b761461007a578063a1b2bf8b1461009a578063f4dd6e14146100ba57610052565b3661005257610050610113565b005b610050610113565b34801561006657600080fd5b50610050610075366004610539565b610125565b34801561008657600080fd5b506100506100953660046105a4565b61022b565b3480156100a657600080fd5b506100506100b5366004610610565b6102ff565b3480156100c657600080fd5b506100506100d536600461068f565b604080516001600160a01b03808516602083015283169181019190915260600160408051601f19818403018152919052805160209182012090555050565b61012361011e610419565b610448565b565b6001600160a01b0381166101805760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006101aa7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146102005760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a656400006044820152606401610177565b610228817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b6040516285fc1360e71b815230906342fe0980906102599060009060129089908990899089906004016106eb565b600060405180830381600087803b15801561027357600080fd5b505af1158015610287573d6000803e3d6000fd5b50506040805160008152602081019182905263c68d428360e01b90915230925063c68d428391506102c7903390670de0b6b3a76400009060248101610739565b600060405180830381600087803b1580156102e157600080fd5b505af11580156102f5573d6000803e3d6000fd5b5050505050505050565b61033c8383838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061047192505050565b60408051606060208201819052600d60808301526c41677265656d656e744461746160981b60a083015233928201839052810185905260009060c0016040516020818303038152906040528051906020012090506103cd818585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506104dc92505050565b336001600160a01b03167f0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca86868660405161040a939291906107a5565b60405180910390a25050505050565b60006104437f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e808015610467573d6000f35b3d6000fd5b505050565b6020548214801561049e57506000801b81600081518110610494576104946107e9565b6020026020010151145b156104d85760405162461bcd60e51b815260206004820152600a60248201526919dbc81d1bc81a985a5b60b21b6044820152606401610177565b5050565b60005b815181101561046c5760008282815181106104fc576104fc6107e9565b6020026020010151905080828501555080610516906107ff565b90506104df565b80356001600160a01b038116811461053457600080fd5b919050565b60006020828403121561054b57600080fd5b6105548261051d565b9392505050565b60008083601f84011261056d57600080fd5b50813567ffffffffffffffff81111561058557600080fd5b60208301915083602082850101111561059d57600080fd5b9250929050565b600080600080604085870312156105ba57600080fd5b843567ffffffffffffffff808211156105d257600080fd5b6105de8883890161055b565b909650945060208701359150808211156105f757600080fd5b506106048782880161055b565b95989497509550505050565b60008060006040848603121561062557600080fd5b83359250602084013567ffffffffffffffff8082111561064457600080fd5b818601915086601f83011261065857600080fd5b81358181111561066757600080fd5b8760208260051b850101111561067c57600080fd5b6020830194508093505050509250925092565b600080604083850312156106a257600080fd5b6106ab8361051d565b91506106b96020840161051d565b90509250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff8616602082015260806040820181905260009061071990830186886106c2565b828103606084015261072c8185876106c2565b9998505050505050505050565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b8181101561077b5785810183015185820160800152820161075f565b8181111561078d576000608083870101525b50601f01601f19169290920160800195945050505050565b838152604060208201819052810182905260006001600160fb1b038311156107cc57600080fd5b8260051b8085606085013760009201606001918252509392505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161081f57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220a2363cdd07286730489ec7dd18bf1108a821cbbf6c6c62d8f4c065ad67cd92cf64736f6c634300080e0033",
    "sourceMap": "864:2422:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:11:12;:9;:11::i;:::-;864:2422:3;;2675:11:12;:9;:11::i;897:285:38:-;;;;;;;;;;-1:-1:-1;897:285:38;;;;;:::i;:::-;;:::i;1506:336:3:-;;;;;;;;;;-1:-1:-1;1506:336:3;;;;;:::i;:::-;;:::i;2605:350::-;;;;;;;;;;-1:-1:-1;2605:350:3;;;;;:::i;:::-;;:::i;2068:372::-;;;;;;;;;;-1:-1:-1;2068:372:3;;;;;:::i;:::-;2403:28;;;-1:-1:-1;;;;;6279:15:42;;;2403:28:3;;;6261:34:42;6331:15;;6311:18;;;6304:43;;;;6196:18;;2403:28:3;;;-1:-1:-1;;2403:28:3;;;;;;;;;2393:39;;2403:28;2393:39;;;;2377:55;;-1:-1:-1;;2068:372:3;2322:110:12;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;897:285:38:-;-1:-1:-1;;;;;973:28:38;;965:64;;;;-1:-1:-1;;;965:64:38;;2617:2:42;965:64:38;;;2599:21:42;2656:2;2636:18;;;2629:30;2695:25;2675:18;;;2668:53;2738:18;;965:64:38;;;;;;;;;1085:1;1047:26;751:20:39;745:27;;618:170;1047:26:38;-1:-1:-1;;;;;1047:40:38;;1039:83;;;;-1:-1:-1;;;1039:83:38;;2969:2:42;1039:83:38;;;2951:21:42;3008:2;2988:18;;;2981:30;3047:32;3027:18;;;3020:60;3097:18;;1039:83:38;2767:354:42;1039:83:38;1132:43;1160:14;988:20:39;964:87;839:228;1132:43:38;897:285;:::o;1506:336:3:-;1615:138;;-1:-1:-1;;;1615:138:3;;1635:4;;1615:37;;:138;;1682:1;;1700:2;;1717:4;;;;1736:6;;;;1615:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1821:12:3;;;1831:1;1821:12;;;;;;;;;-1:-1:-1;;;1764:70:3;;;1784:4;;-1:-1:-1;1764:35:3;;-1:-1:-1;1764:70:3;;1800:10;;1812:7;;1764:70;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:336;;;;:::o;2605:350::-;2689:22;2702:2;2706:4;;2689:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2689:12:3;;-1:-1:-1;;;2689:22:3:i;:::-;2799:47;;;5231:2:42;2799:47:3;;;5213:21:42;;;5270:2;5250:18;;;5243:30;-1:-1:-1;;;5289:19:42;;;5282:44;2753:10:3;5378:20:42;;;5371:62;;;5449:18;;5442:34;;;2728:22:3;;5343:19:42;;2799:47:3;;;;;;;;;;;;2789:58;;;;;;2774:73;;2858:35;2882:4;2888;;2858:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2858:23:3;;-1:-1:-1;;;2858:35:3:i;:::-;2926:10;-1:-1:-1;;;;;2909:38:3;;2938:2;2942:4;;2909:38;;;;;;;;:::i;:::-;;;;;;;;2678:277;;2605:350;;;:::o;1238:130:38:-;1305:7;1335:26;751:20:39;745:27;;618:170;1335:26:38;1328:33;;1238:130;:::o;948:895:12:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;1607:220;;;948:895;:::o;2963:320:3:-;3215:13;;3205:6;:23;:48;;;;;3251:1;3243:10;;3232:4;3237:1;3232:7;;;;;;;;:::i;:::-;;;;;;;:21;3205:48;3201:74;;;3255:20;;-1:-1:-1;;;3255:20:3;;6692:2:42;3255:20:3;;;6674:21:42;6731:2;6711:18;;;6704:30;-1:-1:-1;;;6750:18:42;;;6743:40;6800:18;;3255:20:3;6490:334:42;3201:74:3;2963:320;;:::o;701:213:37:-;781:6;776:132;797:4;:11;793:1;:15;776:132;;;829:9;841:4;846:1;841:7;;;;;;;;:::i;:::-;;;;;;;829:19;;894:1;890;884:4;880:12;873:23;871:27;810:3;;;;:::i;:::-;;;776:132;;14:173:42;82:20;;-1:-1:-1;;;;;131:31:42;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:42:o;383:348::-;435:8;445:6;499:3;492:4;484:6;480:17;476:27;466:55;;517:1;514;507:12;466:55;-1:-1:-1;540:20:42;;583:18;572:30;;569:50;;;615:1;612;605:12;569:50;652:4;644:6;640:17;628:29;;704:3;697:4;688:6;680;676:19;672:30;669:39;666:59;;;721:1;718;711:12;666:59;383:348;;;;;:::o;736:721::-;828:6;836;844;852;905:2;893:9;884:7;880:23;876:32;873:52;;;921:1;918;911:12;873:52;961:9;948:23;990:18;1031:2;1023:6;1020:14;1017:34;;;1047:1;1044;1037:12;1017:34;1086:59;1137:7;1128:6;1117:9;1113:22;1086:59;:::i;:::-;1164:8;;-1:-1:-1;1060:85:42;-1:-1:-1;1252:2:42;1237:18;;1224:32;;-1:-1:-1;1268:16:42;;;1265:36;;;1297:1;1294;1287:12;1265:36;;1336:61;1389:7;1378:8;1367:9;1363:24;1336:61;:::i;:::-;736:721;;;;-1:-1:-1;1416:8:42;-1:-1:-1;;;;736:721:42:o;1462:683::-;1557:6;1565;1573;1626:2;1614:9;1605:7;1601:23;1597:32;1594:52;;;1642:1;1639;1632:12;1594:52;1678:9;1665:23;1655:33;;1739:2;1728:9;1724:18;1711:32;1762:18;1803:2;1795:6;1792:14;1789:34;;;1819:1;1816;1809:12;1789:34;1857:6;1846:9;1842:22;1832:32;;1902:7;1895:4;1891:2;1887:13;1883:27;1873:55;;1924:1;1921;1914:12;1873:55;1964:2;1951:16;1990:2;1982:6;1979:14;1976:34;;;2006:1;2003;1996:12;1976:34;2059:7;2054:2;2044:6;2041:1;2037:14;2033:2;2029:23;2025:32;2022:45;2019:65;;;2080:1;2077;2070:12;2019:65;2111:2;2107;2103:11;2093:21;;2133:6;2123:16;;;;;1462:683;;;;;:::o;2150:260::-;2218:6;2226;2279:2;2267:9;2258:7;2254:23;2250:32;2247:52;;;2295:1;2292;2285:12;2247:52;2318:29;2337:9;2318:29;:::i;:::-;2308:39;;2366:38;2400:2;2389:9;2385:18;2366:38;:::i;:::-;2356:48;;2150:260;;;;;:::o;3126:267::-;3215:6;3210:3;3203:19;3267:6;3260:5;3253:4;3248:3;3244:14;3231:43;-1:-1:-1;3319:1:42;3294:16;;;3312:4;3290:27;;;3283:38;;;;3375:2;3354:15;;;-1:-1:-1;;3350:29:42;3341:39;;;3337:50;;3126:267::o;3398:641::-;-1:-1:-1;;;;;3694:32:42;;3676:51;;3775:4;3763:17;;3758:2;3743:18;;3736:45;3817:3;3812:2;3797:18;;3790:31;;;-1:-1:-1;;3844:63:42;;3887:19;;3879:6;3871;3844:63;:::i;:::-;3955:9;3947:6;3943:22;3938:2;3927:9;3923:18;3916:50;3983;4026:6;4018;4010;3983:50;:::i;:::-;3975:58;3398:641;-1:-1:-1;;;;;;;;;3398:641:42:o;4176:792::-;4434:1;4430;4425:3;4421:11;4417:19;4409:6;4405:32;4394:9;4387:51;4368:4;4457:2;4495:6;4490:2;4479:9;4475:18;4468:34;4538:2;4533;4522:9;4518:18;4511:30;4570:6;4564:13;4613:6;4608:2;4597:9;4593:18;4586:34;4638:1;4648:141;4662:6;4659:1;4656:13;4648:141;;;4758:14;;;4754:23;;4748:30;4723:17;;;4742:3;4719:27;4712:67;4677:10;;4648:141;;;4807:6;4804:1;4801:13;4798:92;;;4878:1;4872:3;4863:6;4852:9;4848:22;4844:32;4837:43;4798:92;-1:-1:-1;4951:2:42;4930:15;-1:-1:-1;;4926:29:42;4911:45;;;;4958:3;4907:55;;4176:792;-1:-1:-1;;;;;4176:792:42:o;5487:557::-;5686:25;;;5747:2;5742;5727:18;;5720:30;;;5766:18;;5759:34;;;-1:-1:-1;;;;;;5805:31:42;;5802:51;;;5849:1;5846;5839:12;5802:51;5883:6;5880:1;5876:14;5940:6;5932;5927:2;5916:9;5912:18;5899:48;6017:1;5970:22;;5994:2;5966:31;6006:13;;;-1:-1:-1;5966:31:42;5487:557;-1:-1:-1;;;5487:557:42:o;6358:127::-;6419:10;6414:3;6410:20;6407:1;6400:31;6450:4;6447:1;6440:15;6474:4;6471:1;6464:15;6829:232;6868:3;6889:17;;;6886:140;;6948:10;6943:3;6939:20;6936:1;6929:31;6983:4;6980:1;6973:15;7011:4;7008:1;7001:15;6886:140;-1:-1:-1;7053:1:42;7042:13;;6829:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "initialize(string,string)": "4cd88b76",
    "initializeProxy(address)": "4a0687ef",
    "setPoisonFlowId(address,address)": "f4dd6e14",
    "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAddress\",\"type\":\"address\"}],\"name\":\"initializeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"setPoisonFlowId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"NOT a robot\",\"details\":\"Notice this is a standard UUPS Proxy, per the Superfluid recommendations. The only major change here is the `updateAgreementData` called by agreements can conditionally revert if an attacker wishes. Everything else functions as a standard pure super token.\",\"events\":{\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}}},\"kind\":\"dev\",\"methods\":{\"initialize(string,string)\":{\"params\":{\"name\":\"Name of Super Token.\",\"symbol\":\"Symbol of Super Token.\"}},\"initializeProxy(address)\":{\"details\":\"Proxy initialization function.      This should only be called once and it is permission-less.\",\"params\":{\"initialAddress\":\"Initial logic contract code address to be used.\"}},\"setPoisonFlowId(address,address)\":{\"params\":{\"receiver\":\"Address of flow receiver to jail on termination (attacker).\",\"sender\":\"Address of flow sender to jail on termination (super app).\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"params\":{\"data\":\"Agreement data (all zeros if termination)\",\"id\":\"Agreement ID (flow id).\"}}},\"title\":\"Pure Super Token that gets apps jailed.\",\"version\":1},\"userdoc\":{\"events\":{\"AgreementUpdated(address,bytes32,bytes32[])\":{\"notice\":\"ISuperfluidToken.AgreementUpdated\"}},\"kind\":\"user\",\"methods\":{\"initialize(string,string)\":{\"notice\":\"Pure Super Token initializer.\"},\"setPoisonFlowId(address,address)\":{\"notice\":\"Sets a poison Flow ID to jail app\"},\"updateAgreementData(bytes32,bytes32[])\":{\"notice\":\"Defined in `SuperfluidToken.sol`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/SuperPoison.sol\":\"SuperPoison\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@decentral.ee/=node_modules/@decentral.ee/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@superfluid-finance/=node_modules/@superfluid-finance/\",\":contracts/=artifacts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/mocks/SuperPoison.sol\":{\"keccak256\":\"0x4448eb0a7bd7a737c76959d518cddd8ddb003e541d8d5e31c9a67953759a7fef\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7aad4e536652565c5a68bf95327bd7b861c6c5e7a7577998cb4b3e1fe6a8a846\",\"dweb:/ipfs/QmYACpdYa88WdgpxdWtjqDxJQgurm6MNsAmD8h8invC2x8\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x093eaf9a4b05adf2bd3730b753f9e1725ed34b80ea4b5f08477ff2f46a188586\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e9a9b37e8cb6332ed21a8d3f8a6723d897e4a97db63095424522a80b3cfc15\",\"dweb:/ipfs/QmdHcBPPGKQBnmeaAN3Y6YKUPqwR73RrHTiX5uTr6eVx1M\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/CustomSuperTokenBase.sol\":{\"keccak256\":\"0x0e82d13439dcbcd79034168d1d85a37ab8ac65322b80e9cf938822383e8c092b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3a8bd45f533aa4e86ffb552a30a2ebc881657d350c076858c624c14419a123eb\",\"dweb:/ipfs/QmQBxtRAC9U4kZQtPwbsUTjMWa3UpKXUFedDYC44uK5HXZ\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x199095781e4221b6015d859558da09977f79199f38d342ab4899c2cecdf8cec1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9fd3a5a8b16d8517e2af10e20390a9af5adbfa4e783e3a7dd89eb4588db98385\",\"dweb:/ipfs/QmPDtGR43DeMMVsHjUh7FYzMGsFKPpGriRkaahFpN5T5d3\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xc3a6a907245116bcecc70fe4b207454012e8ce4fa190228fb8bbe39e0b1bc5cf\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://83c116bdae48685d20e5a27c942111e685ec1ef6334e7ff6f6d9af66edbd8025\",\"dweb:/ipfs/QmTnVuNTaRFiDmkAmDk7NFYdfQTW1kqgBZiY2exC6k8jDx\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x42b604992cf67321cc12e8bed16543df0db4eaf125b8c1c82c330ebbeb20c014\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7c18b00caf7b8be7e11f75284fb96263ce48a3984d56f2a91ec44cae4413d2fc\",\"dweb:/ipfs/QmWVzdW9KnkwAVe9g5zRuMoqCf7N89AoBfzzRr8puw5d8a\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xcff22ed43df0f34a645e6cbe0d7c5fd08f204d769e9095bc59d7c2fe6d11b7d6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://944b8c5a37839b40ec8ee1ccfecbaf007808a61ea16c7b1351a7184606772032\",\"dweb:/ipfs/QmbUKZqZtVfqZMKYnQUygE4svatKuN9kT2ibrnxMuWXR7n\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x68a466c978557e47bd7385b1d7d78f1c8fb07462a870efc5a791008e33a4f535\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://d109879bdb7f022560a792af2ff481df729bf1b4b8e1831b8022f4d12892d41d\",\"dweb:/ipfs/QmRSWqHq8CP5XWgyV4mJpPxMg33s312s2K5ndHRHVqqZ8n\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xf16efd1ba72322e77e0d936b723c0e71eb14c23e11cf69efae8c7caa407012cf\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://ff4bb321b72dc3332984346e5b66ad131c6132101658fe6707d7a9d043f981ab\",\"dweb:/ipfs/QmXmVD2mZ3LRb7wQZ2VcrpYhtjm21zUe5hPDDDJA1WXbFz\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0xea33d20751ffea4f4446bc04f6c10194fb4da0803a988586d41d49cf4859731c\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7716b1f5eec0a7ac8780d82de4f0274ecd7059be4eec46c82b0b7adce110f10b\",\"dweb:/ipfs/QmWRQafvdCBsyfDYnevXSav1AAz8uZRRBwh2be5Z3vSfVN\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x3eec5a3bf337cd319c1918fd1b16f350cf5f6850ac71f6859066fbf86e734ff4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cda19a2f5ca18e79c1e2300c8efac84c718df76c4fb313f59f84264a4c6b398a\",\"dweb:/ipfs/QmfQiwgDH5Q64w5ufBnDzVaeWv6WCZ6fLTrYu1FSYfBGhq\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x66708dae3fcd06e6fc0a46f2959fc2d1e6b9361f28598337339d26af8eb8c0f9\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://77b80718cec21b81ef190c19fb9fbe73913a95c71f7e6715f671bbe8a224dafc\",\"dweb:/ipfs/QmUdsc6DF2Bgih5VZm7sfaECjhGmwE7tAx8pMkzGQgVKQw\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x70e573644a0ff271c0ccef526809e9d9ab4950ec58755ca84e833cde3b8f3df0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://aea3709687cc37ba625f4cc882fbdb149a7bf5be5afe2b030203c8719641a77b\",\"dweb:/ipfs/QmVpvfR6ZheE5wNUK9CobaVBgVvEnEPkvjWF9cfwyZr7eQ\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0xdb6303086a323e98b5efa5e8d344d531c371ae707e1df4044ca90f3dca111b01\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af01ce1e0ed1992f543293790d58fa97718a1aa5b85923eaa42455d24caa7906\",\"dweb:/ipfs/QmVKMv8BEjkFTcsHqvviB8pTsKbb4tP55pFLvF3vqGZtSH\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxy.sol\":{\"keccak256\":\"0x2c651f24af9c4405c20e0a14907f76f8a0d81ff751c89ebbce48ae7aceab5f58\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://dbf209416f8af6df9949194e682a902c4cbce37520a940c5bd123d5ffb1b7b56\",\"dweb:/ipfs/QmWy7TuYgtpRddTJYCubfzthA7ex7rPrxbLuzcG6bbw7mL\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0xe624225773a60f62c7a0687afb0536ba19a17e4e5605ae71e8af77a0287aca59\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4294e5eb5b194477bca3b8ca04ca92a6fe72dd6cf8da8f0d942a4a86c41c1c7f\",\"dweb:/ipfs/QmdfPXZxJPaBjKNfC8joTcvEhWammJHzRACB1S18sFYfd7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.14+commit.80d49f37"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeProxy"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoisonFlowId"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementData"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "initialize(string,string)": {
            "params": {
              "name": "Name of Super Token.",
              "symbol": "Symbol of Super Token."
            }
          },
          "initializeProxy(address)": {
            "details": "Proxy initialization function.      This should only be called once and it is permission-less.",
            "params": {
              "initialAddress": "Initial logic contract code address to be used."
            }
          },
          "setPoisonFlowId(address,address)": {
            "params": {
              "receiver": "Address of flow receiver to jail on termination (attacker).",
              "sender": "Address of flow sender to jail on termination (super app)."
            }
          },
          "updateAgreementData(bytes32,bytes32[])": {
            "params": {
              "data": "Agreement data (all zeros if termination)",
              "id": "Agreement ID (flow id)."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "initialize(string,string)": {
            "notice": "Pure Super Token initializer."
          },
          "setPoisonFlowId(address,address)": {
            "notice": "Sets a poison Flow ID to jail app"
          },
          "updateAgreementData(bytes32,bytes32[])": {
            "notice": "Defined in `SuperfluidToken.sol`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@decentral.ee/=node_modules/@decentral.ee/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@superfluid-finance/=node_modules/@superfluid-finance/",
        ":contracts/=artifacts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/mocks/SuperPoison.sol": "SuperPoison"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/mocks/SuperPoison.sol": {
        "keccak256": "0x4448eb0a7bd7a737c76959d518cddd8ddb003e541d8d5e31c9a67953759a7fef",
        "urls": [
          "bzz-raw://7aad4e536652565c5a68bf95327bd7b861c6c5e7a7577998cb4b3e1fe6a8a846",
          "dweb:/ipfs/QmYACpdYa88WdgpxdWtjqDxJQgurm6MNsAmD8h8invC2x8"
        ],
        "license": "Unlicense"
      },
      "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x093eaf9a4b05adf2bd3730b753f9e1725ed34b80ea4b5f08477ff2f46a188586",
        "urls": [
          "bzz-raw://46e9a9b37e8cb6332ed21a8d3f8a6723d897e4a97db63095424522a80b3cfc15",
          "dweb:/ipfs/QmdHcBPPGKQBnmeaAN3Y6YKUPqwR73RrHTiX5uTr6eVx1M"
        ],
        "license": "MIT"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/CustomSuperTokenBase.sol": {
        "keccak256": "0x0e82d13439dcbcd79034168d1d85a37ab8ac65322b80e9cf938822383e8c092b",
        "urls": [
          "bzz-raw://3a8bd45f533aa4e86ffb552a30a2ebc881657d350c076858c624c14419a123eb",
          "dweb:/ipfs/QmQBxtRAC9U4kZQtPwbsUTjMWa3UpKXUFedDYC44uK5HXZ"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0x199095781e4221b6015d859558da09977f79199f38d342ab4899c2cecdf8cec1",
        "urls": [
          "bzz-raw://9fd3a5a8b16d8517e2af10e20390a9af5adbfa4e783e3a7dd89eb4588db98385",
          "dweb:/ipfs/QmPDtGR43DeMMVsHjUh7FYzMGsFKPpGriRkaahFpN5T5d3"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xc3a6a907245116bcecc70fe4b207454012e8ce4fa190228fb8bbe39e0b1bc5cf",
        "urls": [
          "bzz-raw://83c116bdae48685d20e5a27c942111e685ec1ef6334e7ff6f6d9af66edbd8025",
          "dweb:/ipfs/QmTnVuNTaRFiDmkAmDk7NFYdfQTW1kqgBZiY2exC6k8jDx"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x42b604992cf67321cc12e8bed16543df0db4eaf125b8c1c82c330ebbeb20c014",
        "urls": [
          "bzz-raw://7c18b00caf7b8be7e11f75284fb96263ce48a3984d56f2a91ec44cae4413d2fc",
          "dweb:/ipfs/QmWVzdW9KnkwAVe9g5zRuMoqCf7N89AoBfzzRr8puw5d8a"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xcff22ed43df0f34a645e6cbe0d7c5fd08f204d769e9095bc59d7c2fe6d11b7d6",
        "urls": [
          "bzz-raw://944b8c5a37839b40ec8ee1ccfecbaf007808a61ea16c7b1351a7184606772032",
          "dweb:/ipfs/QmbUKZqZtVfqZMKYnQUygE4svatKuN9kT2ibrnxMuWXR7n"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0x68a466c978557e47bd7385b1d7d78f1c8fb07462a870efc5a791008e33a4f535",
        "urls": [
          "bzz-raw://d109879bdb7f022560a792af2ff481df729bf1b4b8e1831b8022f4d12892d41d",
          "dweb:/ipfs/QmRSWqHq8CP5XWgyV4mJpPxMg33s312s2K5ndHRHVqqZ8n"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0xf16efd1ba72322e77e0d936b723c0e71eb14c23e11cf69efae8c7caa407012cf",
        "urls": [
          "bzz-raw://ff4bb321b72dc3332984346e5b66ad131c6132101658fe6707d7a9d043f981ab",
          "dweb:/ipfs/QmXmVD2mZ3LRb7wQZ2VcrpYhtjm21zUe5hPDDDJA1WXbFz"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0xea33d20751ffea4f4446bc04f6c10194fb4da0803a988586d41d49cf4859731c",
        "urls": [
          "bzz-raw://7716b1f5eec0a7ac8780d82de4f0274ecd7059be4eec46c82b0b7adce110f10b",
          "dweb:/ipfs/QmWRQafvdCBsyfDYnevXSav1AAz8uZRRBwh2be5Z3vSfVN"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x3eec5a3bf337cd319c1918fd1b16f350cf5f6850ac71f6859066fbf86e734ff4",
        "urls": [
          "bzz-raw://cda19a2f5ca18e79c1e2300c8efac84c718df76c4fb313f59f84264a4c6b398a",
          "dweb:/ipfs/QmfQiwgDH5Q64w5ufBnDzVaeWv6WCZ6fLTrYu1FSYfBGhq"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x66708dae3fcd06e6fc0a46f2959fc2d1e6b9361f28598337339d26af8eb8c0f9",
        "urls": [
          "bzz-raw://77b80718cec21b81ef190c19fb9fbe73913a95c71f7e6715f671bbe8a224dafc",
          "dweb:/ipfs/QmUdsc6DF2Bgih5VZm7sfaECjhGmwE7tAx8pMkzGQgVKQw"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x70e573644a0ff271c0ccef526809e9d9ab4950ec58755ca84e833cde3b8f3df0",
        "urls": [
          "bzz-raw://aea3709687cc37ba625f4cc882fbdb149a7bf5be5afe2b030203c8719641a77b",
          "dweb:/ipfs/QmVpvfR6ZheE5wNUK9CobaVBgVvEnEPkvjWF9cfwyZr7eQ"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/libs/FixedSizeData.sol": {
        "keccak256": "0xdb6303086a323e98b5efa5e8d344d531c371ae707e1df4044ca90f3dca111b01",
        "urls": [
          "bzz-raw://af01ce1e0ed1992f543293790d58fa97718a1aa5b85923eaa42455d24caa7906",
          "dweb:/ipfs/QmVKMv8BEjkFTcsHqvviB8pTsKbb4tP55pFLvF3vqGZtSH"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxy.sol": {
        "keccak256": "0x2c651f24af9c4405c20e0a14907f76f8a0d81ff751c89ebbce48ae7aceab5f58",
        "urls": [
          "bzz-raw://dbf209416f8af6df9949194e682a902c4cbce37520a940c5bd123d5ffb1b7b56",
          "dweb:/ipfs/QmWy7TuYgtpRddTJYCubfzthA7ex7rPrxbLuzcG6bbw7mL"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSUtils.sol": {
        "keccak256": "0xe624225773a60f62c7a0687afb0536ba19a17e4e5605ae71e8af77a0287aca59",
        "urls": [
          "bzz-raw://4294e5eb5b194477bca3b8ca04ca92a6fe72dd6cf8da8f0d942a4a86c41c1c7f",
          "dweb:/ipfs/QmdfPXZxJPaBjKNfC8joTcvEhWammJHzRACB1S18sFYfd7"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/mocks/SuperPoison.sol",
    "id": 1200,
    "exportedSymbols": {
      "CustomSuperTokenBase": [
        27969
      ],
      "FixedSizeData": [
        30078
      ],
      "IERC20": [
        24669
      ],
      "ISuperToken": [
        28949
      ],
      "SuperPoison": [
        1199
      ],
      "UUPSProxy": [
        30135
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:3250:3",
    "nodes": [
      {
        "id": 1038,
        "nodeType": "PragmaDirective",
        "src": "38:24:3",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 1041,
        "nodeType": "ImportDirective",
        "src": "66:159:3",
        "absolutePath": "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/CustomSuperTokenBase.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/CustomSuperTokenBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1200,
        "sourceUnit": 27970,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1039,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28949,
              "src": "80:11:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1040,
              "name": "CustomSuperTokenBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27969,
              "src": "98:20:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1043,
        "nodeType": "ImportDirective",
        "src": "227:103:3",
        "absolutePath": "node_modules/@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxy.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1200,
        "sourceUnit": 30136,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1042,
              "name": "UUPSProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30135,
              "src": "235:9:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1045,
        "nodeType": "ImportDirective",
        "src": "332:102:3",
        "absolutePath": "node_modules/@superfluid-finance/ethereum-contracts/contracts/libs/FixedSizeData.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/libs/FixedSizeData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1200,
        "sourceUnit": 30079,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1044,
              "name": "FixedSizeData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30078,
              "src": "340:13:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1047,
        "nodeType": "ImportDirective",
        "src": "436:70:3",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1200,
        "sourceUnit": 24670,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1046,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24669,
              "src": "444:6:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1199,
        "nodeType": "ContractDefinition",
        "src": "864:2422:3",
        "nodes": [
          {
            "id": 1062,
            "nodeType": "EventDefinition",
            "src": "1151:117:3",
            "anonymous": false,
            "documentation": {
              "id": 1053,
              "nodeType": "StructuredDocumentation",
              "src": "929:216:3",
              "text": "@notice ISuperfluidToken.AgreementUpdated\n @dev Agreement updated event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
            },
            "eventSelector": "0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca",
            "name": "AgreementUpdated",
            "nameLocation": "1157:16:3",
            "parameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1055,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "1200:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "1184:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1057,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1233:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "1225:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1060,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1256:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "1246:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1058,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1246:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1059,
                    "nodeType": "ArrayTypeName",
                    "src": "1246:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1173:94:3"
            }
          },
          {
            "id": 1065,
            "nodeType": "VariableDeclaration",
            "src": "1332:30:3",
            "constant": false,
            "documentation": {
              "id": 1063,
              "nodeType": "StructuredDocumentation",
              "src": "1276:50:3",
              "text": "@notice Flow ID generated by any two addresses"
            },
            "mutability": "mutable",
            "name": "_poisonFlowId",
            "nameLocation": "1349:13:3",
            "scope": 1199,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1064,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1332:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1108,
            "nodeType": "FunctionDefinition",
            "src": "1506:336:3",
            "body": {
              "id": 1107,
              "nodeType": "Block",
              "src": "1604:238:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1682:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1674:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1081,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1674:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1674:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1080,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24669,
                          "src": "1667:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24669_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1667:18:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24669",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1700:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      {
                        "id": 1087,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "1717:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1088,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "1736:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$24669",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1076,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1635:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperPoison_$1199",
                                  "typeString": "contract SuperPoison"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperPoison_$1199",
                                  "typeString": "contract SuperPoison"
                                }
                              ],
                              "id": 1075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1627:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1074,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1627:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1627:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1073,
                          "name": "ISuperToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28949,
                          "src": "1615:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperToken_$28949_$",
                            "typeString": "type(contract ISuperToken)"
                          }
                        },
                        "id": 1078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1615:26:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$28949",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28607,
                      "src": "1615:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24669_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint8,string memory,string memory) external"
                      }
                    },
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1615:138:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1090,
                  "nodeType": "ExpressionStatement",
                  "src": "1615:138:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1800:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1800:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1812:7:3",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1831:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1821:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 1101,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1825:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1821:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1094,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1784:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperPoison_$1199",
                                  "typeString": "contract SuperPoison"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperPoison_$1199",
                                  "typeString": "contract SuperPoison"
                                }
                              ],
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1776:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1092,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1776:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1776:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1091,
                          "name": "ISuperToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28949,
                          "src": "1764:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperToken_$28949_$",
                            "typeString": "type(contract ISuperToken)"
                          }
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1764:26:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$28949",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28830,
                      "src": "1764:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1764:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1106,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:70:3"
                }
              ]
            },
            "documentation": {
              "id": 1066,
              "nodeType": "StructuredDocumentation",
              "src": "1371:129:3",
              "text": "@notice Pure Super Token initializer.\n @param name Name of Super Token.\n @param symbol Symbol of Super Token."
            },
            "functionSelector": "4cd88b76",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1515:10:3",
            "parameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1552:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1108,
                  "src": "1536:20:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1583:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1108,
                  "src": "1567:22:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1525:71:3"
            },
            "returnParameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:0:3"
            },
            "scope": 1199,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1127,
            "nodeType": "FunctionDefinition",
            "src": "2068:372:3",
            "body": {
              "id": 1126,
              "nodeType": "Block",
              "src": "2134:306:3",
              "statements": [
                {
                  "expression": {
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1116,
                      "name": "_poisonFlowId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "2377:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1120,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1111,
                              "src": "2414:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1121,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1113,
                              "src": "2422:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1118,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2403:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "2403:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2403:28:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1117,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2393:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2393:39:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2377:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1125,
                  "nodeType": "ExpressionStatement",
                  "src": "2377:55:3"
                }
              ]
            },
            "documentation": {
              "id": 1109,
              "nodeType": "StructuredDocumentation",
              "src": "1850:212:3",
              "text": "@notice Sets a poison Flow ID to jail app\n @param sender Address of flow sender to jail on termination (super app).\n @param receiver Address of flow receiver to jail on termination (attacker)."
            },
            "functionSelector": "f4dd6e14",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPoisonFlowId",
            "nameLocation": "2077:15:3",
            "parameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2101:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1127,
                  "src": "2093:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1113,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2117:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1127,
                  "src": "2109:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2092:34:3"
            },
            "returnParameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2134:0:3"
            },
            "scope": 1199,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1172,
            "nodeType": "FunctionDefinition",
            "src": "2605:350:3",
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "2678:277:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1137,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "2702:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1138,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1133,
                        "src": "2706:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      ],
                      "id": 1136,
                      "name": "_tryBreakApp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1198,
                      "src": "2689:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32[] memory) view"
                      }
                    },
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2689:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1140,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:22:3"
                },
                {
                  "assignments": [
                    1142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1142,
                      "mutability": "mutable",
                      "name": "agreementClass",
                      "nameLocation": "2736:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1171,
                      "src": "2728:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1141,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2728:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1145,
                  "initialValue": {
                    "expression": {
                      "id": 1143,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2753:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2753:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2728:35:3"
                },
                {
                  "assignments": [
                    1147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1147,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "2782:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1171,
                      "src": "2774:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1146,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2774:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1156,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "41677265656d656e7444617461",
                            "id": 1151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2810:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1650f662e67aae425d00e9a7d38fbd585b111910cc82fefd4e888e80ca146497",
                              "typeString": "literal_string \"AgreementData\""
                            },
                            "value": "AgreementData"
                          },
                          {
                            "id": 1152,
                            "name": "agreementClass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1142,
                            "src": "2827:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1153,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2843:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_1650f662e67aae425d00e9a7d38fbd585b111910cc82fefd4e888e80ca146497",
                              "typeString": "literal_string \"AgreementData\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1149,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2799:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2799:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2799:47:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1148,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2789:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2789:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2774:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1160,
                        "name": "slot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "2882:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1161,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1133,
                        "src": "2888:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 1157,
                        "name": "FixedSizeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30078,
                        "src": "2858:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FixedSizeData_$30078_$",
                          "typeString": "type(library FixedSizeData)"
                        }
                      },
                      "id": 1159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "storeData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29976,
                      "src": "2858:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32[] memory)"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2858:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "2858:35:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2926:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2926:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1167,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "2938:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1168,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1133,
                        "src": "2942:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      ],
                      "id": 1164,
                      "name": "AgreementUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1062,
                      "src": "2909:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes32[] memory)"
                      }
                    },
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2909:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1170,
                  "nodeType": "EmitStatement",
                  "src": "2904:43:3"
                }
              ]
            },
            "documentation": {
              "id": 1128,
              "nodeType": "StructuredDocumentation",
              "src": "2448:151:3",
              "text": "@notice Defined in `SuperfluidToken.sol`.\n @param id Agreement ID (flow id).\n @param data Agreement data (all zeros if termination)"
            },
            "functionSelector": "a1b2bf8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAgreementData",
            "nameLocation": "2614:19:3",
            "parameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2642:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "2634:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2634:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1133,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2665:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "2646:23:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1131,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2646:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1132,
                    "nodeType": "ArrayTypeName",
                    "src": "2646:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2633:37:3"
            },
            "returnParameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2678:0:3"
            },
            "scope": 1199,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1198,
            "nodeType": "FunctionDefinition",
            "src": "2963:320:3",
            "body": {
              "id": 1197,
              "nodeType": "Block",
              "src": "3038:245:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1180,
                        "name": "flowId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "3205:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1181,
                        "name": "_poisonFlowId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "3215:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3205:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1183,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "3232:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1185,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3237:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3232:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3251:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3243:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 1186,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3243:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3243:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3232:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3205:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1196,
                  "nodeType": "IfStatement",
                  "src": "3201:74:3",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "676f20746f206a61696c",
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3262:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d0069c0c2b001497cd7974bf2fbff4ae89ad377c9f6f6005d20965dbea166205",
                            "typeString": "literal_string \"go to jail\""
                          },
                          "value": "go to jail"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d0069c0c2b001497cd7974bf2fbff4ae89ad377c9f6f6005d20965dbea166205",
                            "typeString": "literal_string \"go to jail\""
                          }
                        ],
                        "id": 1192,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "3255:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 1194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3255:20:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1195,
                    "nodeType": "ExpressionStatement",
                    "src": "3255:20:3"
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_tryBreakApp",
            "nameLocation": "2972:12:3",
            "parameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "flowId",
                  "nameLocation": "2993:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1198,
                  "src": "2985:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1177,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3018:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1198,
                  "src": "3001:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1175,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3001:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1176,
                    "nodeType": "ArrayTypeName",
                    "src": "3001:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2984:39:3"
            },
            "returnParameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:0:3"
            },
            "scope": 1199,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1049,
              "name": "CustomSuperTokenBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27969,
              "src": "888:20:3"
            },
            "id": 1050,
            "nodeType": "InheritanceSpecifier",
            "src": "888:20:3"
          },
          {
            "baseName": {
              "id": 1051,
              "name": "UUPSProxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30135,
              "src": "910:9:3"
            },
            "id": 1052,
            "nodeType": "InheritanceSpecifier",
            "src": "910:9:3"
          }
        ],
        "canonicalName": "SuperPoison",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1048,
          "nodeType": "StructuredDocumentation",
          "src": "510:354:3",
          "text": "@title Pure Super Token that gets apps jailed.\n @author NOT a robot\n @dev Notice this is a standard UUPS Proxy, per the Superfluid recommendations. The only major\n change here is the `updateAgreementData` called by agreements can conditionally revert if an\n attacker wishes. Everything else functions as a standard pure super token."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1199,
          30135,
          24591,
          27969
        ],
        "name": "SuperPoison",
        "nameLocation": "873:11:3",
        "scope": 1200,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 3
}